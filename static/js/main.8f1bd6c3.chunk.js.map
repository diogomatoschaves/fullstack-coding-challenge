{"version":3,"sources":["utils/unbabel-logo.svg","components/Form.js","components/TranslationsList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","state","message","text","getResult","_ref","jobId","id","_this$props","_this","props","addUid","addTranslation","updateTranslation","checkStatus","sourceLang","targetLang","i","originalText","status","setState","showMessage","bsStyle","setTimeout","url","concat","process","headers","Headers","timeoutCallback","fetch","method","then","res","json","response","uid","translations","Object","keys","includes","buttonSubmit","_this$props2","body","JSON","stringify","job_id","translation_job","catch","error","handleChange","e","target","value","_this$state","this","react_default","a","createElement","className","style","width","maxWidth","justifyContent","FormGroup","ControlLabel","FormControl","onChange","componentClass","placeholder","height","Button","disabled","bsSize","onClick","ListGroupItem","top","Component","defaultProps","TranslationsList","deleteJob","deleteTranslation","_this2","styleOptions","expandTranslation","ListGroup","map","translation","data","key","cursor","padding","expanded","marginTop","Well","translatedText","ButtonGroup","whiteSpace","requesting","pending","completed","failed","App","itemsToCheck","forEach","item","objectSpread","defineProperty","_ref2","reduce","newObj","updateObj","jobs","Array","job","String","original_text","translated_text","source_lang","target_lang","Label","src","require","components_Form","components_TranslationsList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f1bd6c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unbabel-logo.6cbce8d6.svg\";","/**\n * Created by diogomatoschaves on 24/11/2018.\n */\n\nimport React, { Component } from 'react'\nimport { FormGroup, ControlLabel, FormControl, Button, ListGroupItem} from 'react-bootstrap'\n\n\nclass Form extends Component {\n\n  static defaultProps = {\n    sourceLang: 'en',\n    targetLang: 'es'\n  }\n\n  state = {\n    message: '',\n    text: ''\n  }\n\n  getResult = ({ jobId, id, text }) => {\n\n    const { addUid, addTranslation, updateTranslation, checkStatus, sourceLang, targetLang } = this.props\n    let i = 0\n\n    addTranslation({ id, jobId, originalText: text, sourceLang, targetLang, status: 'requesting' })\n\n    this.setState({\n      showMessage: true,\n      message: 'Your request was sent!',\n      bsStyle: 'success'\n    })\n    setTimeout(() => {\n      this.setState({ showMessage: false })\n    }, 3000)\n\n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/check_confirmation?jobId=${jobId}&id=${id}`;\n\n    const headers = new Headers()\n\n    const timeoutCallback = () => {\n      i++\n      fetch(url, {\n        method: 'get',\n        headers,\n      })\n        .then(res => res.json())\n        .then(response => {\n          if (response.uid) {\n            addUid(id, response.uid)\n            setTimeout(() => {\n              checkStatus([{ id, uid: response.uid }])\n            }, 3000)\n          } else {\n            if (response.status && response.status === 'failed') {\n              updateTranslation(id, {\n                status: 'failed',\n              })\n            } else {\n              const { translations } = this.props\n              if (Object.keys(translations).includes(id)) setTimeout(timeoutCallback, (7 - i) >= 2 ? (7 - i)*1000 : 2000)\n            }\n          }\n        })\n    }\n    setTimeout(timeoutCallback, 7000)\n  }\n\n  buttonSubmit = () => {\n\n    const { text } = this.state\n    const { sourceLang, targetLang } = this.props\n\n    this.setState({ text: '' })\n\n    if (!text) return\n\n    const headers = new Headers()\n    \n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/new_translation`;\n\n    const body =  JSON.stringify({ text, sourceLang, targetLang })\n    \n    fetch(url, {\n      method: 'post',\n      headers,\n      body\n    })\n      .then(res => res.json())\n      .then(response => this.getResult({ jobId: response.job_id, id: response.translation_job, text }))\n      .catch(error => {\n        this.setState({\n          showMessage: true,\n          message: 'There was an error processing your request. Make sure you are connected to the internet.',\n          bsStyle: 'danger'\n        })\n        setTimeout(() => {\n          this.setState({ showMessage: false })\n        }, 3000)\n      })\n  }\n\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  }\n  \n  render() {\n\n    const { text, message, showMessage, bsStyle } = this.state\n    \n    return (\n      <div className=\"flex-row\" style={{width: '80%', maxWidth: '850px', justifyContent: 'space-around'}}>\n        <FormGroup style={{width: '77%'}}>\n          <ControlLabel>Text to be translated</ControlLabel>\n          <FormControl\n            value={text}\n            onChange={this.handleChange}\n            componentClass=\"textarea\"\n            placeholder=\"Insert your text here\"\n            style={{height: '150px'}}\n          />\n        </FormGroup>\n        <div className=\"flex-row\" style={{width: '20%'}}>\n          <Button disabled={!text} bsStyle=\"primary\" bsSize=\"large\" onClick={this.buttonSubmit}>\n            Send Request\n          </Button>\n        </div>\n        <ListGroupItem\n          className='message-to-user flex-column'\n          bsSize=\"large\"\n          bsStyle={bsStyle}\n          style={{top: showMessage ? '60px' : '-200px'}}\n        >\n          {message}\n        </ListGroupItem>\n      </div>\n    )\n  }\n}\n\nexport default Form\n","/**\n * Created by diogomatoschaves on 24/11/2018.\n */\n\n\nimport React, { Component } from 'react'\nimport { ListGroup, ListGroupItem, Button, ButtonGroup, Well } from 'react-bootstrap'\n\n\nclass TranslationsList extends Component {\n\n  static defaultProps = {\n    styleOptions: {\n      requesting: 'warning',\n      pending: 'info',\n      completed: 'success',\n      failed: 'danger'\n    }\n  }\n\n  deleteJob = ({ id }) => {\n  \n    const headers = new Headers()\n    \n    const { deleteTranslation } = this.props\n    \n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/delete_job?id=${id}`;\n    \n    deleteTranslation({ id })\n    \n    fetch(url, {\n      method: 'get',\n      headers,\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.status === 'deleted') {\n          \n        }\n      })\n  }\n  \n  render() {\n\n    const { translations, styleOptions, expandTranslation, checkStatus } = this.props\n    \n    return (\n      <div className=\"flex-row\" style={{width: '80%', maxWidth: '850px', justifyContent: 'space-around'}}>\n        <ListGroup style={{width: '100%'}}>\n          {translations && Object.keys(translations).map(translation => {\n\n            const data = translations[translation]\n\n            return (\n              <div className=\"flex-row\" style={{width: '100%', justifyContent: 'space-between'}}>\n                <ListGroupItem\n                  key={translation}\n                  bsStyle={styleOptions[data.status]}\n                  style={{cursor: 'pointer', padding: 0, width: '77%'}}\n                  className=\"flex-column\"\n                >\n                  <div onClick={() => expandTranslation(data.id)} className=\"flex-column\" style={{width: '100%', padding: '20px'}}>\n                    <div className='flex-row' style={{width: '100%', justifyContent: 'space-between'}}>\n                      <div style={{width: '60%'}} className=\"message-header\">{data.originalText}</div>\n                      <div style={{width: '30%'}}><strong>status: </strong>{data.status}</div>\n                    </div>\n                    {data.expanded && (\n                      <div style={{width: '100%', marginTop: '15px'}}>\n                        <strong>Original Text:</strong>\n                        <Well style={{width: '100%'}}>\n                          {data.originalText}\n                        </Well>\n                        {data.translatedText && (\n                          <div style={{width: '100%', marginTop: '15px'}}>\n                            <strong>Translated Text:</strong>\n                            <Well style={{width: '100%'}}>\n                              {data.translatedText}\n                            </Well>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </ListGroupItem>\n                <div style={{width: '20%'}}>\n                  <ButtonGroup style={{whiteSpace: 'nowrap'}}>\n                    <Button\n                      onClick={() => checkStatus([{id: data.id, uid: data.uid}])}\n                      disabled={data.status !== 'pending' || data.disabled}\n                      bsStyle=\"info\"\n                      // style={{maxWidth: '100px'}}\n                    >\n                      {data.disabled ? 'Checking..' : 'Update'}\n                    </Button>\n                    <Button \n                      bsStyle=\"danger\"\n                      onClick={() => this.deleteJob({ id: data.id })}\n                    >\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </div>\n            )\n          })}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default TranslationsList\n\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { Label } from 'react-bootstrap'\nimport Form from './Form'\nimport TranslationsList from './TranslationsList'\n\nclass App extends Component {\n\n  state = {\n  }\n\n  componentDidMount() {\n    const headers = new Headers()\n\n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/get_jobs`;\n\n    fetch(url, {\n      method: 'get',\n      headers,\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.jobs && response.jobs instanceof Array) {\n          response.jobs.forEach((job) => {\n            this.addTranslation({ \n              id: String(job.id),\n              originalText: job.original_text, \n              translatedText: job.translated_text,\n              sourceLang: job.source_lang,\n              targetLang: job.target_lang, \n              status: job.status,\n              uid: job.uid\n            })\n          })\n        }\n      })\n  }\n  \n  checkStatus = (itemsToCheck) => {\n    \n    const headers = new Headers()\n    \n    // this.setState((state) => {\n    //   return {disabledIds: [...state.disabledIds, ...itemsToCheck.map(item => item.id)]}\n    // })\n\n    itemsToCheck.forEach((item) => {\n      \n      this.updateTranslation(item.id, {disabled: true})\n      \n      const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/check_status?uid=${item.uid}&id=${item.id}`;\n\n      fetch(url, {\n        method: 'get',\n        headers,\n      })\n        .then(res => res.json())\n        .then(response => {\n          \n          this.updateTranslation(item.id, {disabled: false})\n          \n          if (response.status === 'completed') {\n            this.updateTranslation(item.id, {\n              status: 'completed',\n              translatedText: response.translatedText\n            })\n          }\n        })\n    })\n  }\n  \n  addTranslation = ({ jobId, id, originalText, translatedText, sourceLang, targetLang, status, uid }) => {\n    this.setState((state) => {\n      return {\n        translations: {\n          ...state.translations,\n          [id]: {\n            id,\n            jobId,\n            originalText,\n            translatedText,\n            sourceLang,\n            targetLang,\n            status,\n            uid\n          }\n        }\n      }\n    })\n  }\n  \n  deleteTranslation = ({ id }) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          // debugger\n          return translation === id ?\n            newObj : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  expandTranslation = (key) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          // debugger\n          return translation === key ? {\n            ...newObj,\n            [translation]: {\n              ...state.translations[translation],\n              expanded: !state.translations[translation].expanded\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  addUid = (key, uid) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          return translation === key ? {\n            ...newObj, \n            [translation]: {\n              ...state.translations[translation],\n              uid,\n              status: 'pending'\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  updateTranslation = (key, updateObj) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          return translation === key ? {\n            ...newObj,\n            [translation]: {\n              ...state.translations[translation],\n              ...updateObj\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  render() {\n    \n    const { translations } = this.state\n    \n    return (\n      <div className='app flex-column'>\n        <Label className=\"title\"><img src={require('../utils/unbabel-logo.svg')}/>Translation Service</Label>\n        <Form\n          addUid={this.addUid}\n          addTranslation={this.addTranslation}\n          updateTranslation={this.updateTranslation}\n          checkStatus={this.checkStatus}\n          translations={translations}\n        />\n        <TranslationsList\n          translations={translations}\n          expandTranslation={this.expandTranslation}\n          checkStatus={this.checkStatus}\n          deleteTranslation={this.deleteTranslation}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}