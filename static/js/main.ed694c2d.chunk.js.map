{"version":3,"sources":["utils/unbabel-logo.svg","apiCalls.js","Form.js","TranslationsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fetchJobs","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","headers","url","response","wrap","_context","prev","next","Headers","concat","process","fetch","method","sent","status","Error","json","abrupt","stop","this","apply","arguments","checkStatusAsync","_ref2","_callee2","item","_context2","uid","id","_x","getResultAsync","_ref4","_callee3","_ref3","jobId","_context3","_x2","sendRequestAsync","_ref5","_callee4","body","_context4","_x3","Form","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","text","target","value","buttonDisabled","state","message","sourceLang","name","key","targetLang","getResult","bind","assertThisInitialized","buttonSubmit","_this2","timeStamp","console","log","_this$props","addUid","addTranslation","updateTranslation","checkStatus","_this$state","i","originalText","translatedText","showMessage","bsStyle","setTimeout","timeoutCallback","translations","keys","includes","t0","Date","getTime","JSON","stringify","job_id","translation_job","_this3","_this4","_this$state3","_this$props2","sourceLangs","targetLangs","react_default","createElement","className","style","width","maxWidth","justifyContent","alignSelf","DropdownButton","title","marginLeft","map","lang","MenuItem","onClick","eventKey","paddingLeft","marginTop","FormGroup","FormControl","onChange","componentClass","placeholder","height","Button","type","disabled","bsSize","ListGroupItem","top","Component","defaultProps","TranslationsList","deleteJob","deleteTranslation","then","res","getFormattedDate","difference","now","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","styleOptions","expandTranslation","orderedTranslations","sort","b","length","ListGroup","translation","cursor","padding","border","expanded","textAlign","Well","backgroundColor","paddingTop","ButtonGroup","whiteSpace","requesting","pending","completed","failed","App","objectSpread","defineProperty","reduce","newObj","updateObj","jobs","Array","forEach","job","String","original_text","translated_text","source_lang","target_lang","timestamp","errorStatus","itemsToCheck","Label","src","require","src_Form","src_TranslationsList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed694c2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unbabel-logo.6cbce8d6.svg\";","/**\n * Created by diogomatoschaves on 26/11/2018.\n */\n\nexport const fetchJobs = async () => {\n\n  const headers = new Headers()\n  \n  const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n    : process.env.REACT_APP_API_URL_PRODUCTION}/get_jobs`;\n\n  const response = await fetch(url, {\n    method: 'get',\n    headers,\n  })\n  \n  if(response.status >= 400) {\n    throw(new Error('Error fetching jobs'))\n  } else {\n    return await response.json()\n  }\n}\n\nexport const checkStatusAsync = async (item) => {\n\n  const headers = new Headers()\n  \n  const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n  : process.env.REACT_APP_API_URL_PRODUCTION}/check_status?uid=${item.uid}&id=${item.id}`;\n\n  const response = await fetch(url, {\n    method: 'get',\n    headers,\n  })\n  \n  if (response.status >= 400) {\n    throw(new Error('Error checking job status'))\n  } else {\n    return await response.json()\n  }\n}\n\nexport const getResultAsync = async ({ jobId, id }) => {\n  \n  const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/check_confirmation?jobId=${jobId}&id=${id}`;\n\n  const headers = new Headers()\n  \n  const response = await fetch(url, {\n    method: 'get',\n    headers,\n  })\n  \n  if (response.status >= 400) {\n    throw(new Error('Error fetching result'))\n  } else {\n    return await response.json()\n  }\n}\n\nexport const sendRequestAsync = async (body) => {\n  \n  const headers = new Headers()\n    \n  const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n    : process.env.REACT_APP_API_URL_PRODUCTION}/new_translation`;\n     \n  const response = await fetch(url, {\n    method: 'post',\n    headers,\n    body\n  })\n      \n  if (response.status >= 400) {\n    throw(new Error('Error sending request'))\n  } else {\n    return await response.json()\n  }\n}\n\n\n","/**\n * Created by diogomatoschaves on 24/11/2018.\n */\n\nimport React, { Component } from 'react'\nimport { FormGroup, ControlLabel, FormControl, Button, ListGroupItem, DropdownButton, MenuItem } from 'react-bootstrap'\nimport { sendRequestAsync, getResultAsync } from './apiCalls'\n\n\nclass Form extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n      text: '',\n      sourceLang: {\n        name: 'English',\n        key: 'en'\n      },\n      targetLang: {\n        name: 'Spanish',\n        key: 'es'\n      },\n      buttonDisabled: true\n    }\n    this.getResult = this.getResult.bind(this)\n    this.buttonSubmit = this.buttonSubmit.bind(this)\n  }\n\n  static defaultProps = {\n    sourceLangs: [{\n      name: 'English',\n      key: 'en'\n    }],\n    targetLangs: [{\n      name: 'Spanish',\n      key: 'es'\n    }]\n  }\n\n  getResult({ jobId, id, text, timeStamp }) {\n    \n    console.log('this is being called')\n\n    const { addUid, addTranslation, updateTranslation, checkStatus } = this.props\n    const { sourceLang, targetLang } = this.state\n    let i = 0\n\n    addTranslation({ id, jobId, originalText: text, sourceLang, targetLang, status: 'requesting', timeStamp, translatedText: '' })\n\n    this.setState({\n      showMessage: true,\n      message: 'Your request was sent!',\n      bsStyle: 'success'\n    })\n    setTimeout(() => {\n      this.setState({ showMessage: false })\n    }, 3000)\n\n    const timeoutCallback = async () => {\n      i++\n      try {\n        const response = await getResultAsync({ jobId, id })\n        \n        console.log(response)\n        \n        if (response.uid) {\n          addUid(id, response.uid)\n          setTimeout(() => {\n            checkStatus([{id, uid: response.uid}])\n          }, 3000)\n        } else {\n          if (response.status && response.status === 'failed') {\n            this.setState({\n              showMessage: true,\n              message: 'The request failed. Please try again',\n              bsStyle: 'danger'\n            })\n            setTimeout(() => {\n              this.setState({showMessage: false})\n            }, 3000)\n            updateTranslation(id, {\n              status: 'failed',\n            })\n          } else {\n            const {translations} = this.props\n            if (Object.keys(translations).includes(id)) setTimeout(timeoutCallback, (7 - i) >= 2 ? (7 - i) * 1000 : 2000)\n          }\n        }\n      } catch (err) {\n        this.setState({\n          showMessage: true,\n          message: 'The request failed. Please try again',\n          bsStyle: 'danger'\n        })\n        setTimeout(() => {\n          this.setState({showMessage: false})\n        }, 3000)\n      }\n    }\n    setTimeout(timeoutCallback, 7000)\n  }\n\n  async buttonSubmit () {\n    \n    const { text } = this.state\n    const { sourceLang, targetLang } = this.state\n    \n    if (!text) return null\n\n    this.setState({ text: '' })\n\n    const timeStamp = new Date().getTime()\n\n    const body =  JSON.stringify({ text, sourceLang: sourceLang.key, targetLang: targetLang.key, timeStamp })\n\n    try {\n      const response = await sendRequestAsync(body)\n      response && this.getResult({jobId: response.job_id, id: response.translation_job, text, timeStamp})\n      console.log('this too was called')\n\n    } catch (err) {\n      this.setState({\n        showMessage: true,\n        message: 'There was an error processing your request. Make sure you are connected to the internet.',\n        bsStyle: 'danger'\n      })\n      setTimeout(() => {\n        this.setState({showMessage: false})\n      }, 3000)\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ text: e.target.value, buttonDisabled: !e.target.value });\n  }\n  \n  render() {\n\n    const { text, message, showMessage, bsStyle, sourceLang, targetLang, buttonDisabled } = this.state\n    const { sourceLangs, targetLangs } = this.props\n\n    return (\n      <div className=\"flex-column\" style={{width: '80%', maxWidth: '850px', justifyContent: 'space-around'}}>\n        <div className=\"flex-row\" style={{ justifyContent: 'flex-start', alignSelf: 'flex-start'}}>\n          <div>\n            <strong>From:</strong>\n            <DropdownButton\n              // bsStyle={title.toLowerCase()}\n              title={sourceLang.name}\n              id={`dropdown-basic`}\n              style={{marginLeft: '10px'}}\n            >\n              {sourceLangs.map(lang => {\n                return (\n                  <MenuItem onClick={() => this.setState({ sourceLang: lang })} key={lang.key} eventKey=\"1\">{lang.name}</MenuItem>\n                )\n              })}\n            </DropdownButton>\n          </div>\n          <div style={{paddingLeft: '20px'}}>\n            <strong>To:</strong>\n            <DropdownButton\n              style={{marginLeft: '10px'}}\n              title={targetLang.name}\n              id={`dropdown-basic`}\n            >\n              {targetLangs.map(lang => {\n                return (\n                  <MenuItem onClick={() => this.setState({ sourceLang: lang })} key={lang.key} eventKey=\"1\">{lang.name}</MenuItem>\n                )\n              })}\n            </DropdownButton>\n          </div>\n        </div>\n        <div className=\"flex-row\" style={{width: '100%', justifyContent: 'space-between', marginTop: '15px'}}>\n          <FormGroup style={{width: '77%'}}>\n            <FormControl\n              id=\"input-textarea\"\n              value={text}\n              onChange={this.handleChange}\n              componentClass=\"textarea\"\n              placeholder=\"Insert your text here\"\n              style={{height: '150px'}}\n            />\n          </FormGroup>\n          <div className=\"flex-row\" style={{width: '20%'}}>\n            {/*<button id=\"send-request\" onClick={this.buttonSubmit} disabled={buttonDisabled}>Send Request</button>*/}\n            <Button type=\"button\" id=\"send-request\" disabled={buttonDisabled} bsStyle=\"primary\" bsSize=\"large\" onClick={this.buttonSubmit}>\n              Send Request\n            </Button>\n          </div>\n        </div>\n        <ListGroupItem\n          className='message-to-user flex-column'\n          bsSize=\"large\"\n          bsStyle={bsStyle}\n          style={{top: showMessage ? '60px' : '-200px'}}\n        >\n          {message}\n        </ListGroupItem>\n      </div>\n    )\n  }\n}\n\nexport default Form\n","/**\n * Created by diogomatoschaves on 24/11/2018.\n */\n\n\nimport React, { Component } from 'react'\nimport { ListGroup, ListGroupItem, Button, ButtonGroup, Well } from 'react-bootstrap'\n\n\nclass TranslationsList extends Component {\n\n  static defaultProps = {\n    styleOptions: {\n      requesting: 'warning',\n      pending: 'info',\n      completed: 'success',\n      failed: 'danger'\n    }\n  }\n\n  deleteJob = ({ id }) => {\n  \n    const headers = new Headers()\n    \n    const { deleteTranslation } = this.props\n    \n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/delete_job?id=${id}`;\n    \n    deleteTranslation({ id })\n    \n    fetch(url, {\n      method: 'get',\n      headers,\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.status === 'deleted') {\n          \n        }\n      })\n  }\n\n  getFormattedDate = (timeStamp) => {\n\n    let difference = Date.now() - timeStamp;\n    const daysDifference = Math.floor(difference/1000/60/60/24);\n    difference -= daysDifference*1000*60*60*24;\n\n    const hoursDifference = Math.floor(difference/1000/60/60);\n    difference -= hoursDifference*1000*60*60;\n\n    const minutesDifference = Math.floor(difference/1000/60);\n    difference -= minutesDifference*1000*60;\n\n    const secondsDifference = Math.floor(difference/1000);\n\n    return daysDifference >= 1 ? `${daysDifference} ${daysDifference === 1 ? 'day' : 'days'} ago` :\n        hoursDifference >= 1 ? `${hoursDifference} ${hoursDifference === 1 ? 'hour' : 'hours'} ago` :\n            minutesDifference >= 1 ? `${minutesDifference} ${minutesDifference === 1 ? 'minute' : 'minutes'} ago` :\n                `${secondsDifference} ${secondsDifference === 1 ? 'second' : 'seconds'} ago`\n\n  };\n  \n  render() {\n\n    const { translations, styleOptions, expandTranslation, checkStatus } = this.props\n    \n    const orderedTranslations = translations ? Object.keys(translations).map(key => translations[key]).sort((a, b) => {\n      return b.originalText.length - a.originalText.length\n    }) : []\n    \n    return (\n      <div className=\"flex-row\" style={{width: '80%', maxWidth: '850px', justifyContent: 'space-around'}}>\n        <ListGroup style={{width: '100%'}}>\n          {orderedTranslations && orderedTranslations.map(translation => {\n\n            return (\n              <div key={translation.id} className=\"flex-row translation-item-wrapper\" style={{width: '100%', justifyContent: 'space-between'}}>\n                <ListGroupItem\n                  bsStyle={styleOptions[translation.status]}\n                  style={{cursor: 'pointer', padding: 0, width: '77%', border: translation.expanded && '2px solid rgb(180, 180, 180)'}}\n                  className=\"flex-column translation-item\"\n                >\n                  <div onClick={() => expandTranslation(translation.id)} className=\"flex-column\" style={{width: '100%', padding: '20px'}}>\n                    <div className='flex-row' style={{width: '100%', justifyContent: 'space-between'}}>\n                      <div style={{width: '40%'}} className=\"message-header\">{translation.originalText}</div>\n                      <div style={{width: '25%', textAlign: 'center'}}><strong>time: </strong>{this.getFormattedDate(translation.timeStamp)}</div>\n                      <div style={{width: '30%', textAlign: 'right'}}><strong>status: </strong>{translation.status}</div>\n                    </div>\n                    {translation.expanded && (\n                      <div style={{width: '100%', marginTop: '15px'}}>\n                        <strong>Original Text:</strong>\n                        <Well style={{width: '100%', backgroundColor: 'white'}}>\n                          {translation.originalText}\n                        </Well>\n                        {translation.translatedText && (\n                          <div style={{width: '100%', marginTop: '15px'}}>\n                            <strong>Translated Text:</strong>\n                            <Well style={{width: '100%', backgroundColor: 'white'}}>\n                              {translation.translatedText}\n                            </Well>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </ListGroupItem>\n                <div style={{width: '20%', textAlign: 'center', alignSelf: 'flex-start', paddingTop: '20px'}}>\n                  <ButtonGroup style={{whiteSpace: 'nowrap'}}>\n                    <Button\n                      onClick={() => checkStatus([{id: translation.id, uid: translation.uid}])}\n                      disabled={translation.status !== 'pending' || translation.disabled}\n                      bsStyle=\"info\"\n                      // style={{maxWidth: '100px'}}\n                    >\n                      {translation.disabled ? 'Checking..' : 'Update'}\n                    </Button>\n                    <Button \n                      bsStyle=\"danger\"\n                      onClick={() => this.deleteJob({ id: translation.id })}\n                    >\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </div>\n            )\n          })}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default TranslationsList\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Label } from 'react-bootstrap'\nimport Form from './Form'\nimport TranslationsList from './TranslationsList'\nimport { fetchJobs, checkStatusAsync } from './apiCalls'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      translations: {}\n    }\n    this.checkStatus = this.checkStatus.bind(this);\n  }\n  \n  async componentDidMount() {\n\n    try {\n      const response = await fetchJobs()\n      if (response.jobs && response.jobs instanceof Array) {\n        response.jobs.forEach((job) => {\n          this.addTranslation({\n            id: String(job.id),\n            originalText: job.original_text,\n            translatedText: job.translated_text,\n            sourceLang: job.source_lang,\n            targetLang: job.target_lang,\n            status: job.status,\n            uid: job.uid,\n            timeStamp: job.timestamp * 1000\n          })\n        })\n      }\n    } catch(err) {\n      this.setState({errorStatus: err.message})\n    }\n  }\n  \n  async checkStatus (itemsToCheck) {\n\n    let response\n\n    itemsToCheck.map(async (item) => {\n\n      this.updateTranslation(item.id, {disabled: true})\n\n      try {\n        response = await checkStatusAsync(item)\n\n        response && this.updateTranslation(item.id, {disabled: false})\n\n        if (response.status === 'completed') {\n          this.updateTranslation(item.id, {\n            status: 'completed',\n            translatedText: response.translatedText\n          })\n        }\n      } catch (err) {\n        this.setState({errorStatus: err.message})\n      }\n    })\n  }\n  \n  addTranslation = ({ jobId, id, originalText, translatedText, sourceLang, targetLang, status, uid, timeStamp }) => {\n    this.setState((state) => {\n      return {\n        translations: {\n          ...state.translations,\n          [id]: {\n            id,\n            jobId,\n            originalText,\n            translatedText,\n            sourceLang,\n            targetLang,\n            status,\n            uid,\n            timeStamp\n          }\n        }\n      }\n    })\n  }\n  \n  deleteTranslation = ({ id }) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          // debugger\n          return translation === id ?\n            newObj : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  expandTranslation = (key) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          // debugger\n          return translation === key ? {\n            ...newObj,\n            [translation]: {\n              ...state.translations[translation],\n              expanded: !state.translations[translation].expanded\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  addUid = (key, uid) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          return translation === key ? {\n            ...newObj, \n            [translation]: {\n              ...state.translations[translation],\n              uid,\n              status: 'pending'\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  updateTranslation = (key, updateObj) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          return translation === key ? {\n            ...newObj,\n            [translation]: {\n              ...state.translations[translation],\n              ...updateObj\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  render() {\n    \n    const { translations } = this.state\n    \n    return (\n      <div className='app flex-column'>\n        <Label className=\"title\"><img src={require('./utils/unbabel-logo.svg')}/>Translation Service</Label>\n        <Form\n          addUid={this.addUid}\n          addTranslation={this.addTranslation}\n          updateTranslation={this.updateTranslation}\n          checkStatus={this.checkStatus}\n          translations={translations}\n        />\n        <TranslationsList\n          translations={translations}\n          expandTranslation={this.expandTranslation}\n          checkStatus={this.checkStatus}\n          deleteTranslation={this.deleteTranslation}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}