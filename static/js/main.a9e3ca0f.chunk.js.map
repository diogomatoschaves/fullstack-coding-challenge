{"version":3,"sources":["utils/unbabel-logo.svg","components/Form.js","components/TranslationsList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","state","message","text","sourceLang","name","key","targetLang","getResult","_ref","jobId","id","timeStamp","_this$props","_this","props","addUid","addTranslation","updateTranslation","checkStatus","_this$state","i","originalText","status","translatedText","setState","showMessage","bsStyle","setTimeout","url","concat","process","headers","Headers","timeoutCallback","fetch","method","then","res","json","response","uid","translations","Object","keys","includes","buttonSubmit","_this$state2","Date","getTime","body","JSON","stringify","job_id","translation_job","catch","error","handleChange","e","target","value","_this2","this","_this$state3","_this$props2","sourceLangs","targetLangs","react_default","a","createElement","className","style","width","maxWidth","justifyContent","alignSelf","DropdownButton","title","marginLeft","map","lang","MenuItem","onClick","eventKey","paddingLeft","marginTop","FormGroup","FormControl","onChange","componentClass","placeholder","height","Button","disabled","bsSize","ListGroupItem","top","Component","defaultProps","TranslationsList","deleteJob","deleteTranslation","getFormattedDate","difference","now","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","styleOptions","expandTranslation","orderedTranslations","sort","b","length","ListGroup","translation","cursor","padding","textAlign","expanded","Well","paddingTop","ButtonGroup","whiteSpace","requesting","pending","completed","failed","App","itemsToCheck","forEach","item","objectSpread","defineProperty","_ref2","reduce","newObj","updateObj","jobs","Array","job","String","original_text","translated_text","source_lang","target_lang","timestamp","Label","src","require","components_Form","components_TranslationsList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9e3ca0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unbabel-logo.6cbce8d6.svg\";","/**\n * Created by diogomatoschaves on 24/11/2018.\n */\n\nimport React, { Component } from 'react'\nimport { FormGroup, ControlLabel, FormControl, Button, ListGroupItem, DropdownButton, MenuItem } from 'react-bootstrap'\n\n\nclass Form extends Component {\n\n  static defaultProps = {\n    sourceLangs: [{\n      name: 'English',\n      key: 'en'\n    }],\n    targetLangs: [{\n      name: 'Spanish',\n      key: 'es'\n    }]\n  }\n\n  state = {\n    message: '',\n    text: '',\n    sourceLang: {\n      name: 'English',\n      key: 'en'\n    },\n    targetLang: {\n      name: 'Spanish',\n      key: 'es'\n    }\n  }\n\n  getResult = ({ jobId, id, text, timeStamp }) => {\n\n    const { addUid, addTranslation, updateTranslation, checkStatus } = this.props\n    const { sourceLang, targetLang } = this.state\n    let i = 0\n\n    addTranslation({ id, jobId, originalText: text, sourceLang, targetLang, status: 'requesting', timeStamp, translatedText: '' })\n\n    this.setState({\n      showMessage: true,\n      message: 'Your request was sent!',\n      bsStyle: 'success'\n    })\n    setTimeout(() => {\n      this.setState({ showMessage: false })\n    }, 3000)\n\n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/check_confirmation?jobId=${jobId}&id=${id}`;\n\n    const headers = new Headers()\n\n    const timeoutCallback = () => {\n      i++\n      fetch(url, {\n        method: 'get',\n        headers,\n      })\n        .then(res => res.json())\n        .then(response => {\n          if (response.uid) {\n            addUid(id, response.uid)\n            setTimeout(() => {\n              checkStatus([{ id, uid: response.uid }])\n            }, 3000)\n          } else {\n            if (response.status && response.status === 'failed') {\n              this.setState({\n                showMessage: true,\n                message: 'The request failed. Please try again',\n                bsStyle: 'danger'\n              })\n              setTimeout(() => {\n                this.setState({ showMessage: false })\n              }, 3000)\n              updateTranslation(id, {\n                status: 'failed',\n              })\n            } else {\n              const { translations } = this.props\n              if (Object.keys(translations).includes(id)) setTimeout(timeoutCallback, (7 - i) >= 2 ? (7 - i)*1000 : 2000)\n            }\n          }\n        })\n    }\n    setTimeout(timeoutCallback, 7000)\n  }\n\n  buttonSubmit = () => {\n\n    const { text } = this.state\n    const { sourceLang, targetLang } = this.state\n\n    this.setState({ text: '' })\n\n    if (!text) return\n\n    const headers = new Headers()\n    \n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/new_translation`;\n    \n    const timeStamp = new Date().getTime()\n\n    const body =  JSON.stringify({ text, sourceLang: sourceLang.key, targetLang: targetLang.key, timeStamp })\n    \n    fetch(url, {\n      method: 'post',\n      headers,\n      body\n    })\n      .then(res => res.json())\n      .then(response => this.getResult({ jobId: response.job_id, id: response.translation_job, text, timeStamp }))\n      .catch(error => {\n        this.setState({\n          showMessage: true,\n          message: 'There was an error processing your request. Make sure you are connected to the internet.',\n          bsStyle: 'danger'\n        })\n        setTimeout(() => {\n          this.setState({ showMessage: false })\n        }, 3000)\n      })\n  }\n\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  }\n  \n  render() {\n\n    const { text, message, showMessage, bsStyle, sourceLang, targetLang } = this.state\n    const { sourceLangs, targetLangs } = this.props\n\n    return (\n      <div className=\"flex-column\" style={{width: '80%', maxWidth: '850px', justifyContent: 'space-around'}}>\n        <div className=\"flex-row\" style={{ justifyContent: 'flex-start', alignSelf: 'flex-start'}}>\n          <div>\n            <strong>From:</strong>\n            <DropdownButton\n              // bsStyle={title.toLowerCase()}\n              title={sourceLang.name}\n              id={`dropdown-basic`}\n              style={{marginLeft: '10px'}}\n            >\n              {sourceLangs.map(lang => {\n                return (\n                  <MenuItem onClick={() => this.setState({ sourceLang: lang })} key={lang.key} eventKey=\"1\">{lang.name}</MenuItem>\n                )\n              })}\n            </DropdownButton>\n          </div>\n          <div style={{paddingLeft: '20px'}}>\n            <strong>To:</strong>\n            <DropdownButton\n              style={{marginLeft: '10px'}}\n              title={targetLang.name}\n              id={`dropdown-basic`}\n            >\n              {targetLangs.map(lang => {\n                return (\n                  <MenuItem onClick={() => this.setState({ sourceLang: lang })} key={lang.key} eventKey=\"1\">{lang.name}</MenuItem>\n                )\n              })}\n            </DropdownButton>\n          </div>\n        </div>\n        <div className=\"flex-row\" style={{width: '100%', justifyContent: 'space-between', marginTop: '15px'}}>\n          <FormGroup style={{width: '77%'}}>\n\n            <FormControl\n              value={text}\n              onChange={this.handleChange}\n              componentClass=\"textarea\"\n              placeholder=\"Insert your text here\"\n              style={{height: '150px'}}\n            />\n          </FormGroup>\n          <div className=\"flex-row\" style={{width: '20%'}}>\n            <Button disabled={!text} bsStyle=\"primary\" bsSize=\"large\" onClick={this.buttonSubmit}>\n              Send Request\n            </Button>\n          </div>\n        </div>\n        <ListGroupItem\n          className='message-to-user flex-column'\n          bsSize=\"large\"\n          bsStyle={bsStyle}\n          style={{top: showMessage ? '60px' : '-200px'}}\n        >\n          {message}\n        </ListGroupItem>\n      </div>\n    )\n  }\n}\n\nexport default Form\n","/**\n * Created by diogomatoschaves on 24/11/2018.\n */\n\n\nimport React, { Component } from 'react'\nimport { ListGroup, ListGroupItem, Button, ButtonGroup, Well } from 'react-bootstrap'\n\n\nclass TranslationsList extends Component {\n\n  static defaultProps = {\n    styleOptions: {\n      requesting: 'warning',\n      pending: 'info',\n      completed: 'success',\n      failed: 'danger'\n    }\n  }\n\n  deleteJob = ({ id }) => {\n  \n    const headers = new Headers()\n    \n    const { deleteTranslation } = this.props\n    \n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/delete_job?id=${id}`;\n    \n    deleteTranslation({ id })\n    \n    fetch(url, {\n      method: 'get',\n      headers,\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.status === 'deleted') {\n          \n        }\n      })\n  }\n\n  getFormattedDate = (timeStamp) => {\n\n    let difference = Date.now() - timeStamp;\n    const daysDifference = Math.floor(difference/1000/60/60/24);\n    difference -= daysDifference*1000*60*60*24;\n\n    const hoursDifference = Math.floor(difference/1000/60/60);\n    difference -= hoursDifference*1000*60*60;\n\n    const minutesDifference = Math.floor(difference/1000/60);\n    difference -= minutesDifference*1000*60;\n\n    const secondsDifference = Math.floor(difference/1000);\n\n    return daysDifference >= 1 ? `${daysDifference} ${daysDifference === 1 ? 'day' : 'days'} ago` :\n        hoursDifference >= 1 ? `${hoursDifference} ${hoursDifference === 1 ? 'hour' : 'hours'} ago` :\n            minutesDifference >= 1 ? `${minutesDifference} ${minutesDifference === 1 ? 'minute' : 'minutes'} ago` :\n                `${secondsDifference} ${secondsDifference === 1 ? 'second' : 'seconds'} ago`\n\n  };\n  \n  render() {\n\n    const { translations, styleOptions, expandTranslation, checkStatus } = this.props\n\n    // const sortProp = optionsSort.filter((option) => option.value === valueSort)[0].key;\n\n    const orderedTranslations = translations ? Object.keys(translations).map(key => translations[key]).sort((a, b) => {\n      return b.originalText.length - a.originalText.length\n    }) : []\n    \n    return (\n      <div className=\"flex-row\" style={{width: '80%', maxWidth: '850px', justifyContent: 'space-around'}}>\n        <ListGroup style={{width: '100%'}}>\n          {orderedTranslations && orderedTranslations.map(translation => {\n\n            return (\n              <div key={translation.id} className=\"flex-row\" style={{width: '100%', justifyContent: 'space-between'}}>\n                <ListGroupItem\n                  bsStyle={styleOptions[translation.status]}\n                  style={{cursor: 'pointer', padding: 0, width: '77%'}}\n                  className=\"flex-column\"\n                >\n                  <div onClick={() => expandTranslation(translation.id)} className=\"flex-column\" style={{width: '100%', padding: '20px'}}>\n                    <div className='flex-row' style={{width: '100%', justifyContent: 'space-between'}}>\n                      <div style={{width: '40%'}} className=\"message-header\">{translation.originalText}</div>\n                      <div style={{width: '25%', textAlign: 'center'}}><strong>time: </strong>{this.getFormattedDate(translation.timeStamp)}</div>\n                      <div style={{width: '30%', textAlign: 'right'}}><strong>status: </strong>{translation.status}</div>\n                    </div>\n                    {translation.expanded && (\n                      <div style={{width: '100%', marginTop: '15px'}}>\n                        <strong>Original Text:</strong>\n                        <Well style={{width: '100%'}}>\n                          {translation.originalText}\n                        </Well>\n                        {translation.translatedText && (\n                          <div style={{width: '100%', marginTop: '15px'}}>\n                            <strong>Translated Text:</strong>\n                            <Well style={{width: '100%'}}>\n                              {translation.translatedText}\n                            </Well>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </ListGroupItem>\n                <div style={{width: '20%', textAlign: 'center', alignSelf: 'flex-start', paddingTop: '20px'}}>\n                  <ButtonGroup style={{whiteSpace: 'nowrap'}}>\n                    <Button\n                      onClick={() => checkStatus([{id: translation.id, uid: translation.uid}])}\n                      disabled={translation.status !== 'pending' || translation.disabled}\n                      bsStyle=\"info\"\n                      // style={{maxWidth: '100px'}}\n                    >\n                      {translation.disabled ? 'Checking..' : 'Update'}\n                    </Button>\n                    <Button \n                      bsStyle=\"danger\"\n                      onClick={() => this.deleteJob({ id: translation.id })}\n                    >\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </div>\n            )\n          })}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default TranslationsList\n\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { Label } from 'react-bootstrap'\nimport Form from './Form'\nimport TranslationsList from './TranslationsList'\n\nclass App extends Component {\n\n  state = {\n  }\n\n  componentDidMount() {\n    const headers = new Headers()\n\n    const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/get_jobs`;\n\n    fetch(url, {\n      method: 'get',\n      headers,\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.jobs && response.jobs instanceof Array) {\n          response.jobs.forEach((job) => {\n            this.addTranslation({ \n              id: String(job.id),\n              originalText: job.original_text, \n              translatedText: job.translated_text,\n              sourceLang: job.source_lang,\n              targetLang: job.target_lang, \n              status: job.status,\n              uid: job.uid,\n              timeStamp: job.timestamp * 1000\n            })\n          })\n        }\n      })\n  }\n  \n  checkStatus = (itemsToCheck) => {\n    \n    const headers = new Headers()\n\n    itemsToCheck.forEach((item) => {\n      \n      this.updateTranslation(item.id, {disabled: true})\n      \n      const url = `${process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEVELOPMENT \n      : process.env.REACT_APP_API_URL_PRODUCTION}/check_status?uid=${item.uid}&id=${item.id}`;\n\n      fetch(url, {\n        method: 'get',\n        headers,\n      })\n        .then(res => res.json())\n        .then(response => {\n          \n          this.updateTranslation(item.id, {disabled: false})\n          \n          if (response.status === 'completed') {\n            this.updateTranslation(item.id, {\n              status: 'completed',\n              translatedText: response.translatedText\n            })\n          }\n        })\n    })\n  }\n  \n  addTranslation = ({ jobId, id, originalText, translatedText, sourceLang, targetLang, status, uid, timeStamp }) => {\n    this.setState((state) => {\n      return {\n        translations: {\n          ...state.translations,\n          [id]: {\n            id,\n            jobId,\n            originalText,\n            translatedText,\n            sourceLang,\n            targetLang,\n            status,\n            uid,\n            timeStamp\n          }\n        }\n      }\n    })\n  }\n  \n  deleteTranslation = ({ id }) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          // debugger\n          return translation === id ?\n            newObj : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  expandTranslation = (key) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          // debugger\n          return translation === key ? {\n            ...newObj,\n            [translation]: {\n              ...state.translations[translation],\n              expanded: !state.translations[translation].expanded\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  addUid = (key, uid) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          return translation === key ? {\n            ...newObj, \n            [translation]: {\n              ...state.translations[translation],\n              uid,\n              status: 'pending'\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  updateTranslation = (key, updateObj) => {\n    this.setState((state) => {\n      return {\n        translations: Object.keys(state.translations).reduce((newObj, translation) => {\n          return translation === key ? {\n            ...newObj,\n            [translation]: {\n              ...state.translations[translation],\n              ...updateObj\n            }\n          } : {\n            ...newObj,\n            [translation]: state.translations[translation]\n          }\n        }, {})\n      }\n    })\n  }\n\n  render() {\n    \n    const { translations } = this.state\n    \n    return (\n      <div className='app flex-column'>\n        <Label className=\"title\"><img src={require('../utils/unbabel-logo.svg')}/>Translation Service</Label>\n        <Form\n          addUid={this.addUid}\n          addTranslation={this.addTranslation}\n          updateTranslation={this.updateTranslation}\n          checkStatus={this.checkStatus}\n          translations={translations}\n        />\n        <TranslationsList\n          translations={translations}\n          expandTranslation={this.expandTranslation}\n          checkStatus={this.checkStatus}\n          deleteTranslation={this.deleteTranslation}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}